# Generated by Django 5.0.6 on 2024-06-22 22:01

import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('kitchen', 'Кухня'), ('hallway', 'Коридор'), ('entryway', 'Прихожая'), ('bathroom', 'Ванная'), ('children', 'Детская'), ('bedroom', 'Спальня'), ('living_room', 'Гостиная'), ('dining_room', 'Столовая'), ('office', 'Кабинет')], max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип помещения',
                'verbose_name_plural': 'Типы помещений',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Электронная почта')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Номер телефона')),
                ('phone_is_confirmed', models.BooleanField(default=False, verbose_name='Телефон подтвержден')),
                ('has_children', models.BooleanField(default=False, verbose_name='Наличие детей')),
                ('repair_planned', models.BooleanField(default=False, verbose_name='Планируется ли ремонт')),
                ('repair_date', models.CharField(blank=True, choices=[('ongoing', 'Уже идет'), ('soon', 'Скоро приступаем'), ('six_months', 'В течение полугода'), ('one_year', 'В течение года')], max_length=255, null=True, verbose_name='Когда планируется ремонт')),
                ('subscribe_newsletter', models.BooleanField(default=True, verbose_name='Согласие на рассылку')),
                ('consent_personal_data', models.BooleanField(default=True, verbose_name='Согласие на обработку персональных данных')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является сотрудником')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('repair_rooms', models.ManyToManyField(blank=True, to='users.room', verbose_name='Комнаты, в которых планируется ремонт')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(default=0, verbose_name='Баланс')),
                ('referral_code', models.CharField(max_length=255, unique=True, verbose_name='Реферальный код')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Программа лояльности',
                'verbose_name_plural': 'Программы лояльности',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Баллы')),
                ('description', models.CharField(default='Automated transaction', max_length=255, verbose_name='Описание')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Транзакция лояльности',
                'verbose_name_plural': 'Транзакции лояльности',
            },
        ),
    ]
